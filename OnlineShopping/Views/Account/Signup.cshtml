@model OnlineShopping.Models.User

@{
    ViewBag.Title = "Signup";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @*<link href="~/Content/font-awesome.css" rel="stylesheet" />
        <script src="~/Scripts/popper.js"></script>*@
    @*<link href="/your-path-to-fontawesome/css/fontawesome.css" rel="stylesheet">
        <link href="/your-path-to-fontawesome/css/brands.css" rel="stylesheet">
        <link href="/your-path-to-fontawesome/css/solid.css" rel="stylesheet">*@
    @*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css">*@
    <style>
        .back_image {
            background-image: url("https://c0.wallpaperflare.com/preview/813/237/71/blur-blurred-background-boutique-clothes-thumbnail.jpg");
            background-size: cover;
            opacity: 10.0;
        }

        .footer1 {
            padding: 10px;
            margin-left: 100px;
            margin-right: 200px;
            margin-top: 50px;
            color: darkgoldenrod;
            font-family: Calibri;
            text-decoration-thickness: auto;
            background-color: #C19A6B;
        }

        .footer2 {
            padding: 10px;
            margin-left: 50px;
            margin-right: 20px;
            margin-top: 50px;
            color: darkgoldenrod;
            font-family: Calibri;
            text-decoration-thickness: auto;
            background-color: #C19A6B;
        }

        a:link, a:visited {
            color: blanchedalmond;
            cursor: pointer;
        }

            a:link:active, a:visited:active {
                color: blanchedalmond;
            }
    </style>
</head>



<body class="back_image" style="align-content:center;margin-left:auto;margin-right:auto;">
    <div class="footer1">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">


                <h4 style="text-align:center;font-size:50px;color:brown;">SIGNUP </h4>

                <div style="font-size:20px;color:brown;" class="footer2">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @{
                        var listitems = new List<SelectListItem>()
{
    new SelectListItem{Text="Male",Value="Male"},new SelectListItem{Text="Female",Value="Female"}
};
                    }

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        
                        
                        @Html.DropDownListFor(model => model.Gender, listitems, string.Empty)

                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emailid, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.emailid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emailid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    @Html.LabelFor(model => model.ph_number, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ph_number, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ph_number, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="SignUp" class="btn btn-default" />
                    </div>
                </div>
                </div>
            </div>

        }
    </div>
</body>
</html>
